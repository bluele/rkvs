// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/proto/service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SystemRequestJoin struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr                 []byte   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemRequestJoin) Reset()         { *m = SystemRequestJoin{} }
func (m *SystemRequestJoin) String() string { return proto.CompactTextString(m) }
func (*SystemRequestJoin) ProtoMessage()    {}
func (*SystemRequestJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{0}
}

func (m *SystemRequestJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemRequestJoin.Unmarshal(m, b)
}
func (m *SystemRequestJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemRequestJoin.Marshal(b, m, deterministic)
}
func (m *SystemRequestJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemRequestJoin.Merge(m, src)
}
func (m *SystemRequestJoin) XXX_Size() int {
	return xxx_messageInfo_SystemRequestJoin.Size(m)
}
func (m *SystemRequestJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemRequestJoin.DiscardUnknown(m)
}

var xxx_messageInfo_SystemRequestJoin proto.InternalMessageInfo

func (m *SystemRequestJoin) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SystemRequestJoin) GetAddr() []byte {
	if m != nil {
		return m.Addr
	}
	return nil
}

type SystemResponseJoin struct {
	Status               []byte   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemResponseJoin) Reset()         { *m = SystemResponseJoin{} }
func (m *SystemResponseJoin) String() string { return proto.CompactTextString(m) }
func (*SystemResponseJoin) ProtoMessage()    {}
func (*SystemResponseJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{1}
}

func (m *SystemResponseJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemResponseJoin.Unmarshal(m, b)
}
func (m *SystemResponseJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemResponseJoin.Marshal(b, m, deterministic)
}
func (m *SystemResponseJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemResponseJoin.Merge(m, src)
}
func (m *SystemResponseJoin) XXX_Size() int {
	return xxx_messageInfo_SystemResponseJoin.Size(m)
}
func (m *SystemResponseJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemResponseJoin.DiscardUnknown(m)
}

var xxx_messageInfo_SystemResponseJoin proto.InternalMessageInfo

func (m *SystemResponseJoin) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

type SystemRequestServers struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemRequestServers) Reset()         { *m = SystemRequestServers{} }
func (m *SystemRequestServers) String() string { return proto.CompactTextString(m) }
func (*SystemRequestServers) ProtoMessage()    {}
func (*SystemRequestServers) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{2}
}

func (m *SystemRequestServers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemRequestServers.Unmarshal(m, b)
}
func (m *SystemRequestServers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemRequestServers.Marshal(b, m, deterministic)
}
func (m *SystemRequestServers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemRequestServers.Merge(m, src)
}
func (m *SystemRequestServers) XXX_Size() int {
	return xxx_messageInfo_SystemRequestServers.Size(m)
}
func (m *SystemRequestServers) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemRequestServers.DiscardUnknown(m)
}

var xxx_messageInfo_SystemRequestServers proto.InternalMessageInfo

type SystemResponseServers struct {
	Infos                []*ServerInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SystemResponseServers) Reset()         { *m = SystemResponseServers{} }
func (m *SystemResponseServers) String() string { return proto.CompactTextString(m) }
func (*SystemResponseServers) ProtoMessage()    {}
func (*SystemResponseServers) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{3}
}

func (m *SystemResponseServers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemResponseServers.Unmarshal(m, b)
}
func (m *SystemResponseServers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemResponseServers.Marshal(b, m, deterministic)
}
func (m *SystemResponseServers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemResponseServers.Merge(m, src)
}
func (m *SystemResponseServers) XXX_Size() int {
	return xxx_messageInfo_SystemResponseServers.Size(m)
}
func (m *SystemResponseServers) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemResponseServers.DiscardUnknown(m)
}

var xxx_messageInfo_SystemResponseServers proto.InternalMessageInfo

func (m *SystemResponseServers) GetInfos() []*ServerInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type KVSRequestRead struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVSRequestRead) Reset()         { *m = KVSRequestRead{} }
func (m *KVSRequestRead) String() string { return proto.CompactTextString(m) }
func (*KVSRequestRead) ProtoMessage()    {}
func (*KVSRequestRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{4}
}

func (m *KVSRequestRead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVSRequestRead.Unmarshal(m, b)
}
func (m *KVSRequestRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVSRequestRead.Marshal(b, m, deterministic)
}
func (m *KVSRequestRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVSRequestRead.Merge(m, src)
}
func (m *KVSRequestRead) XXX_Size() int {
	return xxx_messageInfo_KVSRequestRead.Size(m)
}
func (m *KVSRequestRead) XXX_DiscardUnknown() {
	xxx_messageInfo_KVSRequestRead.DiscardUnknown(m)
}

var xxx_messageInfo_KVSRequestRead proto.InternalMessageInfo

func (m *KVSRequestRead) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type KVSResponseRead struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVSResponseRead) Reset()         { *m = KVSResponseRead{} }
func (m *KVSResponseRead) String() string { return proto.CompactTextString(m) }
func (*KVSResponseRead) ProtoMessage()    {}
func (*KVSResponseRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{5}
}

func (m *KVSResponseRead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVSResponseRead.Unmarshal(m, b)
}
func (m *KVSResponseRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVSResponseRead.Marshal(b, m, deterministic)
}
func (m *KVSResponseRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVSResponseRead.Merge(m, src)
}
func (m *KVSResponseRead) XXX_Size() int {
	return xxx_messageInfo_KVSResponseRead.Size(m)
}
func (m *KVSResponseRead) XXX_DiscardUnknown() {
	xxx_messageInfo_KVSResponseRead.DiscardUnknown(m)
}

var xxx_messageInfo_KVSResponseRead proto.InternalMessageInfo

func (m *KVSResponseRead) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type KVSRequestWrite struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVSRequestWrite) Reset()         { *m = KVSRequestWrite{} }
func (m *KVSRequestWrite) String() string { return proto.CompactTextString(m) }
func (*KVSRequestWrite) ProtoMessage()    {}
func (*KVSRequestWrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{6}
}

func (m *KVSRequestWrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVSRequestWrite.Unmarshal(m, b)
}
func (m *KVSRequestWrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVSRequestWrite.Marshal(b, m, deterministic)
}
func (m *KVSRequestWrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVSRequestWrite.Merge(m, src)
}
func (m *KVSRequestWrite) XXX_Size() int {
	return xxx_messageInfo_KVSRequestWrite.Size(m)
}
func (m *KVSRequestWrite) XXX_DiscardUnknown() {
	xxx_messageInfo_KVSRequestWrite.DiscardUnknown(m)
}

var xxx_messageInfo_KVSRequestWrite proto.InternalMessageInfo

func (m *KVSRequestWrite) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KVSRequestWrite) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type KVSResponseWrite struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVSResponseWrite) Reset()         { *m = KVSResponseWrite{} }
func (m *KVSResponseWrite) String() string { return proto.CompactTextString(m) }
func (*KVSResponseWrite) ProtoMessage()    {}
func (*KVSResponseWrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{7}
}

func (m *KVSResponseWrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVSResponseWrite.Unmarshal(m, b)
}
func (m *KVSResponseWrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVSResponseWrite.Marshal(b, m, deterministic)
}
func (m *KVSResponseWrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVSResponseWrite.Merge(m, src)
}
func (m *KVSResponseWrite) XXX_Size() int {
	return xxx_messageInfo_KVSResponseWrite.Size(m)
}
func (m *KVSResponseWrite) XXX_DiscardUnknown() {
	xxx_messageInfo_KVSResponseWrite.DiscardUnknown(m)
}

var xxx_messageInfo_KVSResponseWrite proto.InternalMessageInfo

type KVSRequestPing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVSRequestPing) Reset()         { *m = KVSRequestPing{} }
func (m *KVSRequestPing) String() string { return proto.CompactTextString(m) }
func (*KVSRequestPing) ProtoMessage()    {}
func (*KVSRequestPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{8}
}

func (m *KVSRequestPing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVSRequestPing.Unmarshal(m, b)
}
func (m *KVSRequestPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVSRequestPing.Marshal(b, m, deterministic)
}
func (m *KVSRequestPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVSRequestPing.Merge(m, src)
}
func (m *KVSRequestPing) XXX_Size() int {
	return xxx_messageInfo_KVSRequestPing.Size(m)
}
func (m *KVSRequestPing) XXX_DiscardUnknown() {
	xxx_messageInfo_KVSRequestPing.DiscardUnknown(m)
}

var xxx_messageInfo_KVSRequestPing proto.InternalMessageInfo

type KVSResponsePing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVSResponsePing) Reset()         { *m = KVSResponsePing{} }
func (m *KVSResponsePing) String() string { return proto.CompactTextString(m) }
func (*KVSResponsePing) ProtoMessage()    {}
func (*KVSResponsePing) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{9}
}

func (m *KVSResponsePing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVSResponsePing.Unmarshal(m, b)
}
func (m *KVSResponsePing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVSResponsePing.Marshal(b, m, deterministic)
}
func (m *KVSResponsePing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVSResponsePing.Merge(m, src)
}
func (m *KVSResponsePing) XXX_Size() int {
	return xxx_messageInfo_KVSResponsePing.Size(m)
}
func (m *KVSResponsePing) XXX_DiscardUnknown() {
	xxx_messageInfo_KVSResponsePing.DiscardUnknown(m)
}

var xxx_messageInfo_KVSResponsePing proto.InternalMessageInfo

type ServerInfo struct {
	Suffrage             int32    `protobuf:"varint,1,opt,name=suffrage,proto3" json:"suffrage,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfo) Reset()         { *m = ServerInfo{} }
func (m *ServerInfo) String() string { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()    {}
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aebf558e1985a9d, []int{10}
}

func (m *ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfo.Unmarshal(m, b)
}
func (m *ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfo.Marshal(b, m, deterministic)
}
func (m *ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfo.Merge(m, src)
}
func (m *ServerInfo) XXX_Size() int {
	return xxx_messageInfo_ServerInfo.Size(m)
}
func (m *ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfo proto.InternalMessageInfo

func (m *ServerInfo) GetSuffrage() int32 {
	if m != nil {
		return m.Suffrage
	}
	return 0
}

func (m *ServerInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServerInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*SystemRequestJoin)(nil), "proto.SystemRequestJoin")
	proto.RegisterType((*SystemResponseJoin)(nil), "proto.SystemResponseJoin")
	proto.RegisterType((*SystemRequestServers)(nil), "proto.SystemRequestServers")
	proto.RegisterType((*SystemResponseServers)(nil), "proto.SystemResponseServers")
	proto.RegisterType((*KVSRequestRead)(nil), "proto.KVSRequestRead")
	proto.RegisterType((*KVSResponseRead)(nil), "proto.KVSResponseRead")
	proto.RegisterType((*KVSRequestWrite)(nil), "proto.KVSRequestWrite")
	proto.RegisterType((*KVSResponseWrite)(nil), "proto.KVSResponseWrite")
	proto.RegisterType((*KVSRequestPing)(nil), "proto.KVSRequestPing")
	proto.RegisterType((*KVSResponsePing)(nil), "proto.KVSResponsePing")
	proto.RegisterType((*ServerInfo)(nil), "proto.ServerInfo")
}

func init() { proto.RegisterFile("pkg/proto/service.proto", fileDescriptor_5aebf558e1985a9d) }

var fileDescriptor_5aebf558e1985a9d = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x4d, 0x4f, 0xea, 0x40,
	0x14, 0x4d, 0xbf, 0xe0, 0xbd, 0xfb, 0x5e, 0x10, 0x26, 0x50, 0x6a, 0x75, 0x61, 0x66, 0x03, 0x0b,
	0x03, 0x09, 0x86, 0xa8, 0x71, 0xe3, 0xc2, 0x8d, 0xb2, 0x31, 0x6d, 0x82, 0xeb, 0x6a, 0xa7, 0xa4,
	0x41, 0x5b, 0xec, 0xb4, 0x24, 0xfc, 0x06, 0x7f, 0x8b, 0xff, 0xd1, 0xcc, 0x9d, 0xa9, 0xb4, 0xd0,
	0x55, 0xe7, 0x9e, 0x7b, 0xcf, 0x39, 0xb7, 0xf7, 0xc0, 0x70, 0xb3, 0x5e, 0x4d, 0x37, 0x59, 0x9a,
	0xa7, 0x53, 0xce, 0xb2, 0x6d, 0xfc, 0xc6, 0x26, 0x58, 0x11, 0x0b, 0x3f, 0xf4, 0x1a, 0x7a, 0xfe,
	0x8e, 0xe7, 0xec, 0xc3, 0x63, 0x9f, 0x05, 0xe3, 0xf9, 0x53, 0x1a, 0x27, 0xa4, 0x03, 0x7a, 0x1c,
	0x3a, 0xda, 0x85, 0x36, 0xfe, 0xef, 0xe9, 0x71, 0x48, 0x08, 0x98, 0x41, 0x18, 0x66, 0x8e, 0x8e,
	0x08, 0xbe, 0xe9, 0x25, 0x90, 0x92, 0xc8, 0x37, 0x69, 0xc2, 0x19, 0x32, 0x6d, 0x68, 0xf1, 0x3c,
	0xc8, 0x0b, 0xae, 0xd8, 0xaa, 0xa2, 0x36, 0xf4, 0x6b, 0x36, 0x3e, 0xcb, 0xb6, 0x2c, 0xe3, 0xf4,
	0x1e, 0x06, 0x75, 0x15, 0xd5, 0x20, 0x23, 0xb0, 0xe2, 0x24, 0x4a, 0x85, 0x8e, 0x31, 0xfe, 0x37,
	0xeb, 0xc9, 0xad, 0x27, 0xb2, 0xfd, 0x98, 0x44, 0xa9, 0x27, 0xfb, 0x94, 0x42, 0x67, 0xb1, 0xf4,
	0x95, 0xac, 0xc7, 0x82, 0x90, 0x74, 0xc1, 0x58, 0xb3, 0x9d, 0x5a, 0x40, 0x3c, 0xe9, 0x08, 0x4e,
	0x70, 0x46, 0x5a, 0xe0, 0x50, 0x1f, 0xac, 0x6d, 0xf0, 0x5e, 0x30, 0x35, 0x26, 0x0b, 0x7a, 0xab,
	0x06, 0x51, 0xec, 0x25, 0x8b, 0x73, 0x76, 0xac, 0xb6, 0xa7, 0xea, 0x55, 0x2a, 0x81, 0x6e, 0xc5,
	0x03, 0xb9, 0xb4, 0x5b, 0xdd, 0xed, 0x39, 0x4e, 0x56, 0xb4, 0x57, 0xdb, 0x04, 0x21, 0x0f, 0x60,
	0xff, 0x57, 0xc4, 0x85, 0x3f, 0xbc, 0x88, 0xa2, 0x2c, 0x58, 0xc9, 0xd5, 0x2c, 0xef, 0xb7, 0x56,
	0xb1, 0x08, 0xd7, 0xbf, 0x18, 0x8b, 0x03, 0x6d, 0x11, 0x05, 0xe3, 0xdc, 0x31, 0x10, 0x2c, 0xcb,
	0xd9, 0x97, 0x06, 0x2d, 0x79, 0x57, 0x72, 0x07, 0x26, 0x26, 0xe3, 0x94, 0x17, 0x3c, 0x4c, 0xdb,
	0x3d, 0x3d, 0xe8, 0x54, 0xe2, 0x7c, 0x80, 0x76, 0x19, 0xc8, 0x59, 0x13, 0x5f, 0x35, 0xdd, 0xf3,
	0x46, 0x09, 0xd5, 0x9d, 0x7d, 0x6b, 0x60, 0x2c, 0x96, 0x3e, 0x99, 0x83, 0x89, 0xb7, 0x1f, 0xa8,
	0xe9, 0x7a, 0x6e, 0xae, 0x5d, 0x85, 0x2b, 0x51, 0xdd, 0x80, 0x25, 0xa3, 0xb0, 0x8f, 0x78, 0x88,
	0xbb, 0xc3, 0x63, 0xa2, 0x24, 0xcc, 0xc1, 0x14, 0x27, 0x6e, 0x30, 0x14, 0x70, 0x93, 0xa1, 0xc0,
	0x5f, 0x5b, 0x08, 0x5f, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x83, 0x66, 0x1f, 0x16, 0x3c, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SystemClient is the client API for System service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SystemClient interface {
	Join(ctx context.Context, in *SystemRequestJoin, opts ...grpc.CallOption) (*SystemResponseJoin, error)
	Servers(ctx context.Context, in *SystemRequestServers, opts ...grpc.CallOption) (*SystemResponseServers, error)
}

type systemClient struct {
	cc *grpc.ClientConn
}

func NewSystemClient(cc *grpc.ClientConn) SystemClient {
	return &systemClient{cc}
}

func (c *systemClient) Join(ctx context.Context, in *SystemRequestJoin, opts ...grpc.CallOption) (*SystemResponseJoin, error) {
	out := new(SystemResponseJoin)
	err := c.cc.Invoke(ctx, "/proto.System/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemClient) Servers(ctx context.Context, in *SystemRequestServers, opts ...grpc.CallOption) (*SystemResponseServers, error) {
	out := new(SystemResponseServers)
	err := c.cc.Invoke(ctx, "/proto.System/Servers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemServer is the server API for System service.
type SystemServer interface {
	Join(context.Context, *SystemRequestJoin) (*SystemResponseJoin, error)
	Servers(context.Context, *SystemRequestServers) (*SystemResponseServers, error)
}

func RegisterSystemServer(s *grpc.Server, srv SystemServer) {
	s.RegisterService(&_System_serviceDesc, srv)
}

func _System_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemRequestJoin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.System/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServer).Join(ctx, req.(*SystemRequestJoin))
	}
	return interceptor(ctx, in, info, handler)
}

func _System_Servers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemRequestServers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServer).Servers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.System/Servers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServer).Servers(ctx, req.(*SystemRequestServers))
	}
	return interceptor(ctx, in, info, handler)
}

var _System_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.System",
	HandlerType: (*SystemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _System_Join_Handler,
		},
		{
			MethodName: "Servers",
			Handler:    _System_Servers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/service.proto",
}

// KVSClient is the client API for KVS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVSClient interface {
	Read(ctx context.Context, in *KVSRequestRead, opts ...grpc.CallOption) (*KVSResponseRead, error)
	Write(ctx context.Context, in *KVSRequestWrite, opts ...grpc.CallOption) (*KVSResponseWrite, error)
	Ping(ctx context.Context, in *KVSRequestPing, opts ...grpc.CallOption) (*KVSResponsePing, error)
}

type kVSClient struct {
	cc *grpc.ClientConn
}

func NewKVSClient(cc *grpc.ClientConn) KVSClient {
	return &kVSClient{cc}
}

func (c *kVSClient) Read(ctx context.Context, in *KVSRequestRead, opts ...grpc.CallOption) (*KVSResponseRead, error) {
	out := new(KVSResponseRead)
	err := c.cc.Invoke(ctx, "/proto.KVS/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Write(ctx context.Context, in *KVSRequestWrite, opts ...grpc.CallOption) (*KVSResponseWrite, error) {
	out := new(KVSResponseWrite)
	err := c.cc.Invoke(ctx, "/proto.KVS/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Ping(ctx context.Context, in *KVSRequestPing, opts ...grpc.CallOption) (*KVSResponsePing, error) {
	out := new(KVSResponsePing)
	err := c.cc.Invoke(ctx, "/proto.KVS/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVSServer is the server API for KVS service.
type KVSServer interface {
	Read(context.Context, *KVSRequestRead) (*KVSResponseRead, error)
	Write(context.Context, *KVSRequestWrite) (*KVSResponseWrite, error)
	Ping(context.Context, *KVSRequestPing) (*KVSResponsePing, error)
}

func RegisterKVSServer(s *grpc.Server, srv KVSServer) {
	s.RegisterService(&_KVS_serviceDesc, srv)
}

func _KVS_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVSRequestRead)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KVS/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Read(ctx, req.(*KVSRequestRead))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVSRequestWrite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KVS/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Write(ctx, req.(*KVSRequestWrite))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVSRequestPing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KVS/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Ping(ctx, req.(*KVSRequestPing))
	}
	return interceptor(ctx, in, info, handler)
}

var _KVS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.KVS",
	HandlerType: (*KVSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _KVS_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _KVS_Write_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _KVS_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/service.proto",
}
